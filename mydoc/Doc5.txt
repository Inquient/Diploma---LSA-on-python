Для того чтобы успешно выполнить поставленную задачу в соответствии с техническим заданием, мы должны определить основные программные средства разработки и главные алгоритмы функционирования приложения.
Выбор предметной области накладывает некоторые, хотя и не слишком критические, ограничения на выбор таких технических средств как среда разработки, язык программирования, СУБД, web-фреймворки и т.п. В нашем случае, можно сформулировать два основных требования к языку разработки. 
Во-первых, характер поставленной задачи предполагает, что для её достижения необходимо реализовать определённый алгоритм обработки текста. Это в свою очередь означает, что необходимо реализовать математические алгоритмы, составляющие основу выбранного метода текстового анализа, что в свою очередь может представлять собой достаточно сложную вычислительную задачу.
Во-вторых, выбранный язык программирования должен не просто позволять решать поставленную задачу, но делать её решение наиболее простым и понятным как для программиста, так и для конечного пользователя итогового приложения.
Итак, в качестве языка разработки был избран высокоуровневый язык Python. Несмотря на то, что python является языком программирования общего назначения, он полностью удовлетворяет условиям, выдвинутым к средствам разработки в данной курсовой работе. Конечно можно заметить, что для реализации специфических математических алгоритмов больше подошли бы специализированные языки, или даже целые программные пакеты вроде Matlab или Maple. Но, поскольку целью работы является не только исследование алгоритма анализа текстов, но и написание программного продукта, то от этого варианта была решено отказаться.
Кроме того, python изначально был ориентирован на повышение производительности разработчика и читаемости кода. Это отвечает нашему второму требованию к языку разработки. Для python существует огромное количество разнообразных пакетов и библиотек, реализующих математические методы, являющиеся частью алгоритма текстового анализа. Подробнее об этих методах и их применении написано в следующем пункте данного раздела.
Также важным является выбор среды разработки. Для Python существует целый набор мощных IDE, некоторые из которых позиционируют себя как специализированные среды для разработки научных и исследовательских приложений. Таковы, например, Anaconda, Python (x, y), Spyder (IDE) и другие. Однако, в качестве среды разработки нами была выбрана IDE PyCharm и это вполне объяснимо.
Как и при выборе языка, здесь большую роль сыграло удобство разработки. Ведь по большому счёту программы на Python можно писать и в блокноте, пользуясь консолью для запуска интерпретатора. PyCharm имеет удобный, настраиваемый интерфейс, инструменты для рефакторинга и анализа кода, что уже само по себе повышает эффективность разработки. Установка дополнительных пакетов от IDE, в принципе, не зависит и одинаково проста для всех сред.
О библиотеках и пакетах, использовавшихся при создании проекта, будет подробно рассказано в дальнейшем. Однако следует заметить, что пакеты, предустановленные в Anaconda или Python (x, y) хоть и отвечают поставленной задаче, но для её выполнения явно избыточны.
На этом обоснование средств разработки можно считать законченным, и переходить к описанию самого процесса разработки.  
